AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates the ImageBuilder component, recipe, infra configuration, distribution configuration, and pipeline for SREWindows for Research Gateway'
Parameters:
  SourceBucketName:
    Type: String
    Default: uh-rg-prod-imagebuilder
    Description: 'The S3 bucket name where the source files are located'
  VPCId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnetId:
    Type: AWS::EC2::Subnet::Id
  MasterAMI:
    Type: String
    Default: ami-06118ec31766655f0
  Ver:
    Type: String
    Default: "1.0.0"
  Environment:
    Type: String
    Default: QA
    Description: 'The environment to be tagged: QA or Prod'
    AllowedValues:
      - QA
      - PROD  
Resources:
  ############
  # COMPONENTS
  ############
  ComponentConfigureOS:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ConfigureOSComponent-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Configure Operating System Patches"
      Tags:
        Name: !Join ["-", ["ComponentConfigureOS", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: |
        name: ConfigureOS
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: UpdateOS
                action: UpdateOS
  ComponentSREWindows:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentSREWindows-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Configure SREWindows"
      Tags:
        Name: !Join ["-", ["ConfigureSREWindows", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        name: ComponentSREWindows
        description: This is the provisioner for SREWindows for Research Gateway
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: AddFiles
                action: S3Download
                inputs:
                - source: s3://${SourceBucketName}/ec2-winsecure-image.zip
                  destination: C:/Users/Administrator/ec2-winsecure-image.zip
                  overwrite: true
              - name: ExtractFiles
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting ec2-winsecure-image.zip..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\ec2-winsecure-image.zip" -DestinationPath "C:\\Program Files\\ResearchGateway" 
              - name: InstallPython
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Downloading python..."
                    - $pythonURL = "https://www.python.org/ftp/python/3.12.3/python-3.12.3-amd64.exe"
                    - Invoke-WebRequest -Uri $pythonURL -OutFile "C:\\Users\\Administrator\\python-3.12.3-amd64.exe"
                    - echo "Installing python..."
                    - Start-Process -FilePath 'C:\\Users\\Administrator\\python-3.12.3-amd64.exe' -ArgumentList '/quiet', 'InstallAllUsers=1', 'PrependPath=1' -Wait
                    - Remove-Item -Path "C:\\Users\\Administrator\\python-3.12.3-amd64.exe" -Force
              - name: ExecuteProvisioner
                action: ExecutePowerShell
                inputs:
                  commands:
                    - Copy-Item -Path "C:\\Program Files\\ResearchGateway\\provision-windows.ps1" -Destination "C:\\Users\\Administrator\\provision-windows.ps1"
                    - "C:\\Users\\Administrator\\provision-windows.ps1"
                    - echo "Removing archive ec2-winsecure-image.zip"
                    - Remove-Item 'C:/Users/Administrator/ec2-winsecure-image.zip'
              - name: ChangeAMIPassword
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Changing windows password..."
                    - net user Administrator Admin@123
                    - echo "Windows password changed successfully"  
  ComponentTanium:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentTanium-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Install Tanium Client"
      Tags:
        Name: !Join ["-", ["InstallTanium", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        schemaVersion: 1.0
        name: ComponentTanium
        description: This component installs Tanium Client on Windows
        phases:
          - name: build
            steps:
              - name: DownloadInstallerZip
                action: S3Download
                inputs:
                  - source: s3://${SourceBucketName}/TaniumClient_7.6.4.2033.zip
                    destination: C:\\Users\\Administrator\\TaniumClient_7.6.4.2033.zip
              - name: ExtractInstaller
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting TaniumClient_7.6.4.2033..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033.zip" -DestinationPath "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033" -Force
              - name: InstallApp
                action: ExecutePowerShell
                inputs:
                  commands:
                    - $installerPath = "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033\\SetupClient.exe"
                    - $installerBatPath = "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033\\install.bat"
                    - if ((Test-Path -Path "$installerPath") -and (Test-Path -Path "$installerBatPath")){ Start-Process -FilePath "$installerBatPath" -Wait -NoNewWindow} else { echo "Installer not found at $installerPath or batch file not found at $installerBatPath"}
                    - Remove-Item -Path "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033" -Force -Recurse
                    - Remove-Item -Path "C:\\Users\\Administrator\\TaniumClient_7.6.4.2033.zip" -Force 
  ComponentCrowdStrike:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentCrowdStrike-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Install CrowdStrike Falcon 7.1 Agent"
      Tags:
        Name: !Join ["-", ["ComponentCrowdStrike", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        schemaVersion: 1.0
        name: ComponentCrowdStrike
        description: This component installs CrowdStrike Falcon 7.1 Agent on Windows
        phases:
          - name: build
            steps:
              - name: DownloadInstallerZip
                action: S3Download
                inputs:
                  - source: s3://${SourceBucketName}/CrowdStrikeAgent.zip
                    destination: C:\\Users\\Administrator\\CrowdStrikeAgent.zip
              - name: ExtractInstaller
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting CrowdStrike Falcon 7.1 Agent..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\CrowdStrikeAgent.zip" -DestinationPath "C:\\Users\\Administrator\\CrowdStrikeAgent" -Force
              - name: InstallApp
                action: ExecutePowerShell
                inputs:
                  commands:
                    - cd  "C:\\Users\\Administrator\\CrowdStrikeAgent"
                    - $installerPath = "C:\\Users\\Administrator\\CrowdStrikeAgent\\WindowsSensor.MaverickGyr.exe"
                    - $installerBatPath = "C:\\Users\\Administrator\\CrowdStrikeAgent\\PROD-UHIT-WIN-SERVER.bat"
                    - if ((Test-Path $installerPath) -and (Test-Path $installerBatPath)){ Start-Process -FilePath "$installerBatPath" -Wait } else { echo "Installer not found at $installerPath or batch file not found at $installerBatPath" }
                    - cd  "C:\\Users\\Administrator"
                    - Remove-Item -Path "C:\\Users\\Administrator\\CrowdStrikeAgent" -Force -Recurse
  ComponentNotepad:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentNotepad-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Install Notepad"
      Tags:
        Name: !Join ["-", ["ComponentNotepad", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        schemaVersion: 1.0
        name: ComponentNotepad
        description: This component installs Notepad
        phases:
          - name: build
            steps:
              - name: DownloadNotepad
                action: S3Download
                inputs:
                  - source: s3://${SourceBucketName}/Notepadpp-v8.6.4.zip
                    destination: C:\\Users\\Administrator\\Notepadpp-v8.6.4.zip
              - name: ExtractNotepad
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting Notepadpp-v8.6.4.zip..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\Notepadpp-v8.6.4.zip" -DestinationPath "C:\\Users\\Administrator\\Notepad++" -Force
              - name: InstallNotepad
                action: ExecutePowerShell
                inputs:
                  commands:
                    - $installerPath = "C:\\Users\\Administrator\\Notepad++\\Notepadpp v8.6.4.msi"
                    - if (Test-Path $installerPath) { Start-Process -FilePath "msiexec.exe" -ArgumentList "/i `"$installerPath`" /quiet /norestart" -Wait } else { echo "Installer not found at $installerPath" }
  ComponentOffice365:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentOffice365-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Install Microsoft Office 365"
      Tags:
        Name: !Join ["-", ["ComponentOffice365", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        name: ComponentOffice365
        description: This component installs Microsoft Office 365
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: DownloadOffice
                action: S3Download
                inputs:
                  - source: s3://${SourceBucketName}/office365.zip
                    destination: C:\\Users\\Administrator\\office365.zip
              - name: ExtractOffice
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting office365.zip..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\office365.zip" -DestinationPath "C:\\Users\\Administrator\\office365" -Force
              - name: InstallOffice
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Installing Microsoft Office..."
                    - Start-Process -FilePath "C:\\Users\\Administrator\\office365\\setup.exe" -ArgumentList "/configure C:\\Users\\Administrator\\office365\\Configuration.xml" -Wait -NoNewWindow
  ComponentAdobeAcrobat:
    Type: "AWS::ImageBuilder::Component"
    Properties:
      Name: !Sub "ComponentAdobeAcrobat-${AWS::StackName}"
      Platform: "Windows"
      SupportedOsVersions: ["Microsoft Windows Server 2022"]
      Version: !Ref Ver
      Description: "Install Adobe Acrobat"
      Tags:
        Name: !Join ["-", ["ComponentAdobeAcrobat", !Ref AWS::StackName]]
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      Data: !Sub |
        schemaVersion: 1.0
        name: ComponentAdobeAcrobat
        description: This component installs Adobe Acrobat
        phases:
          - name: build
            steps:
              - name: DownloadAcrobat
                action: S3Download
                inputs:
                  - source: s3://${SourceBucketName}/Acrobat 24.1_en_US_WIN_64.zip
                    destination: C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64.zip
              - name: ExtractAcrobat
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Extracting Acrobat_24.1_en_US_WIN_64.zip..."
                    - Expand-Archive -Path "C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64.zip" -DestinationPath "C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64" -Force
                    - Remove-Item -Path "C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64.zip" -Force
              - name: InstallAcrobat
                action: ExecutePowerShell
                inputs:
                  commands:
                    - echo "Installing Adobe Acrobat..."
                    - Start-Process -FilePath "C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64\\Acrobat 24.1\\Build\\Setup\\APRO24.1\\Adobe Acrobat\\setup.exe" -ArgumentList "/quiet" -Wait
                    - Remove-Item -Path "C:\\Users\\Administrator\\Acrobat_24.1_en_US_WIN_64" -Recurse -Force
  ############
  # RECIPE
  ############
  RecipeSREWindows:
    Type: "AWS::ImageBuilder::ImageRecipe"
    Properties:
      Name: !Sub "RecipeSREWindows-${AWS::StackName}"
      Version: !Ref Ver
      ParentImage: !Ref MasterAMI
      Description: !Sub "RecipeSREWindows-${AWS::StackName}"
      Components:
        - ComponentArn: !GetAtt ComponentConfigureOS.Arn
        - ComponentArn: !GetAtt ComponentSREWindows.Arn
        - ComponentArn: !GetAtt ComponentAdobeAcrobat.Arn
        - ComponentArn: !GetAtt ComponentNotepad.Arn
        - ComponentArn: !GetAtt ComponentOffice365.Arn
        - ComponentArn: !GetAtt ComponentTanium.Arn
        - ComponentArn: !GetAtt ComponentCrowdStrike.Arn
      Tags:
        Name: !Sub "RecipeSREWindows-${AWS::StackName}"
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
      WorkingDirectory: C:\Users\Administrator
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 64
            VolumeType: "gp2"
      AdditionalInstanceConfiguration: 
        UserDataOverride: 
          Fn::Base64: !Sub |
            <powershell>
            # Set administrator password
            net user Administrator SuperS3cr3t!
            wmic useraccount where "name='Administrator'" set PasswordExpires=FALSE

            # 1) Enable Remote Desktop
            reg add "HKLM\System\CurrentControlSet\Control\Terminal Server" /v "fDenyTSConnections" /t REG_DWORD /d 0 /f

            # 2) Allow incoming RDP on firewall
            netsh advfirewall firewall set rule group="Remote Desktop" new enable=yes

            # 3) Enable secure RDP authentication
            reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v "UserAuthentication" /t REG_DWORD /d 0 /f

            # First, make sure WinRM can't be connected to
            netsh advfirewall firewall set rule name="Windows Remote Management (HTTP-In)" new enable=yes action=block

            # Delete any existing WinRM listeners
            winrm delete winrm/config/listener?Address=*+Transport=HTTP  2>$Null
            winrm delete winrm/config/listener?Address=*+Transport=HTTPS 2>$Null

            # Create a new WinRM listener and configure
            winrm create winrm/config/listener?Address=*+Transport=HTTP
            winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="0"}'
            winrm set winrm/config '@{MaxTimeoutms="7200000"}'
            winrm set winrm/config/service '@{AllowUnencrypted="true"}'
            winrm set winrm/config/service '@{MaxConcurrentOperationsPerUser="12000"}'
            winrm set winrm/config/service/auth '@{Basic="true"}'
            winrm set winrm/config/client/auth '@{Basic="true"}'
            #configure MaxEnvelopeSizekb
            winrm set winrm/config @{MaxEnvelopeSizekb="125167617"}

            # Configure UAC to allow privilege elevation in remote shells
            $Key = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System'
            $Setting = 'LocalAccountTokenFilterPolicy'
            Set-ItemProperty -Path $Key -Name $Setting -Value 1 -Force

            # Configure and restart the WinRM Service; Enable the required firewall exception
            Stop-Service -Name WinRM
            Set-Service -Name WinRM -StartupType Automatic
            netsh advfirewall firewall set rule name="Windows Remote Management (HTTP-In)" new action=allow localip=any remoteip=any
            Start-Service -Name WinRM
            </powershell>
  ##############
  # INFRA CONFIG
  ##############
  InfraConfigSREWindows:
    Type: "AWS::ImageBuilder::InfrastructureConfiguration"
    Properties:
      Name: !Sub "InfraConfig-SREWindows-${AWS::StackName}"
      InstanceProfileName: !Ref ResearchGatewayImgBldrInstancePfl
      InstanceTypes:
        - "m5.large"
      TerminateInstanceOnFailure: True
      SecurityGroupIds:
        - !Ref ResearchGatewayImgBldrInstanceSG
      SubnetId: !Ref PrivateSubnetId
      Logging:
        S3Logs:
          S3BucketName: !Ref SourceBucketName
          S3KeyPrefix: !Join ["/", ["Logs", "RL_RG_SREWindows", !Ref Ver]]
      Tags:
        Name: !Sub "InfraConfig-SREWindows-${AWS::StackName}"
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
  ############
  # SEC GROUP
  ############
  ResearchGatewayImgBldrInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value:
            !Join ["-", ["ImgBldrInstanceSecurityGroup-SREWindows", !Ref AWS::StackName]]

  ##############
  # INST PROFILE
  ##############
  ResearchGatewayImgBldrInstancePfl:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref ResearchGatewayInstanceRole
  ############
  # INST ROLE
  ############
  ResearchGatewayInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action:
              - sts:AssumeRole
      Path: /
  ###############
  # DISTRIBUTION
  ###############      
  DistConfigSREWindows:
    Type: "AWS::ImageBuilder::DistributionConfiguration"
    Properties:
      Name: !Sub "DistConfigSREWindows-${AWS::StackName}"
      Description: "SREWindows for RLCatalyst Research Gateway"
      Distributions:
        - Region: "us-east-1"
          AmiDistributionConfiguration:
            Name: "SREWindows {{ imagebuilder:buildDate }}"
            Description: "SREWindows for RLCatalyst Research Gateway"
            AmiTags:
              Name: "SREWindowsAMI"
      Tags:
        Name: !Sub "DistConfigSREWindows-${AWS::StackName}"
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
  ############
  # PIPELINE
  ############
  PipelineSREWindows:
    Type: "AWS::ImageBuilder::ImagePipeline"
    Properties:
      Name: !Sub "Pipeline-SREWindows-${AWS::StackName}"
      Description: "Pipeline to build SREWindows AMI for RLCatalyst Research Gateway"
      ImageRecipeArn: !Ref RecipeSREWindows
      InfrastructureConfigurationArn: !Ref InfraConfigSREWindows
      DistributionConfigurationArn: !Ref DistConfigSREWindows
      ImageTestsConfiguration:
        ImageTestsEnabled: true
        TimeoutMinutes: 60
      Status: "ENABLED"
      Tags:
        Name: !Sub "Pipeline-SREWindows-${AWS::StackName}"
        CostCenter: PG000000
        CriticalityTier: Business Operational
        Compliance: HIPAA
        Environment: !Ref Environment
        ApplicationName: ResearchGatewayPROD
        Department: DataScience
        ApplicationCustodian: txs908
        ServiceNow: XXX
        DepartmentEmail: txs908@miami.edu
        UHITOwner: txs908
Outputs:
  PipelineSREWindows:
    Description: SREWindows Image Builder Pipeline
    Value: !Ref PipelineSREWindows
    Export:
      Name: !Sub "Pipeline-SREWindows-${AWS::StackName}"