Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - PrivateSubnet1
          - PrivateSubnet2
      - Label:
          default: Certificate of your domain
        Parameters:
          - CertificateArn
         
Parameters: 
  VPC:
    Description: The vpc to launch the service
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1:
    Description: The subnet where to launch the service
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: The subnet where to launch the service
    Type: AWS::EC2::Subnet::Id
 
  CertificateArn:
    Description: Provide your certificate Arn to Research Gateway application available securely over SSL or leave it blank(optional)
    Default: ""
    Type: String

Conditions: 
  securecommunication: !Not [!Equals [!Ref CertificateArn, ""]]
  nonsecurecommunication: !Equals [!Ref CertificateArn, ""]
Resources:
  RGInstanceSecurityGroup:
   Type: AWS::EC2::SecurityGroup
   Properties:
    GroupDescription: Allow http to client host
    VpcId: !Ref VPC
    SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
     
    SecurityGroupEgress:  # Adding egress rule
        - IpProtocol: "-1"  # Allow all protocols
          CidrIp: 0.0.0.0/0  # Allow all outbound traffic to all destinations    
  RGApplicationLoadBalancer:
        Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
        Properties:
            Name: "RG-Application-ALB"
            Scheme: internal
            Type: "application"
            Subnets: 
              - !Ref PrivateSubnet1
              - !Ref PrivateSubnet2
            SecurityGroups:
              - !GetAtt RGInstanceSecurityGroup.GroupId
            IpAddressType: "ipv4"
            Tags:
              - Key: CostCenter
                Value: PG000000
              - Key: CriticalityTier
                Value: Business Operational
              - Key: Compliance
                Value: HIPAA
              - Key: Environment
                Value: PROD
              - Key: ApplicationName
                Value: ResearchGatewayProd
              - Key: Department
                Value: DataScience
              - Key: ApplicationCustodian
                Value: txs908
              - Key: ServiceNow
                Value: XXX
              - Key: DepartmentEmail
                Value: txs908@miami.edu
              - Key: UHITOwner
                Value: txs908                  

  RGHTTPSListener:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Condition: securecommunication
        Properties:
            LoadBalancerArn: !Ref RGApplicationLoadBalancer
            Port: 443
            Protocol: "HTTPS"
            SslPolicy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
            Certificates: 
              - 
                CertificateArn: !Ref CertificateArn
                
            DefaultActions: 
              - 
                Order: 1
                TargetGroupArn: !Ref RGTargetGroup
                Type: "forward"
            Tags:
              - Key: CostCenter
                Value: PG000000
              - Key: CriticalityTier
                Value: Business Operational
              - Key: Compliance
                Value: HIPAA
              - Key: Environment
                Value: PROD
              - Key: ApplicationName
                Value: ResearchGatewayProd
              - Key: Department
                Value: DataScience
              - Key: ApplicationCustodian
                Value: txs908
              - Key: ServiceNow
                Value: XXX
              - Key: DepartmentEmail
                Value: txs908@miami.edu
              - Key: UHITOwner
                Value: txs908               

  RGHTTPListener:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Condition: securecommunication
        Properties:
            LoadBalancerArn: !Ref RGApplicationLoadBalancer
            Port: 80
            Protocol: "HTTP"
            DefaultActions: 
              - 
                Order: 1
                RedirectConfig: 
                    Protocol: "HTTPS"
                    Port: "443"
                    Host: "#{host}"
                    Path: "/#{path}"
                    Query: "#{query}"
                    StatusCode: "HTTP_301"
                Type: "redirect"
            Tags:
              - Key: CostCenter
                Value: PG000000
              - Key: CriticalityTier
                Value: Business Operational
              - Key: Compliance
                Value: HIPAA
              - Key: Environment
                Value: PROD
              - Key: ApplicationName
                Value: ResearchGatewayProd
              - Key: Department
                Value: DataScience
              - Key: ApplicationCustodian
                Value: txs908
              - Key: ServiceNow
                Value: XXX
              - Key: DepartmentEmail
                Value: txs908@miami.edu
              - Key: UHITOwner
                Value: txs908               
  RGTargetGroup:
        Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
        Properties:
            HealthCheckIntervalSeconds: 30
            HealthCheckPath: "/"
            Port: 443
            Protocol: "HTTPS"
            HealthCheckPort: "traffic-port"
            HealthCheckProtocol: "HTTPS"
            HealthCheckTimeoutSeconds: 5
            UnhealthyThresholdCount: 2
            TargetType: "instance"
            Matcher: 
                HttpCode: "200"
            HealthyThresholdCount: 5
            VpcId: !Ref VPC
            Name: "Rg-target-group-1"
            HealthCheckEnabled: true
  RGHTTPListener1:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Condition: nonsecurecommunication
        Properties:
            DefaultActions:
              - Type: "forward"
                TargetGroupArn: !Ref RGTargetGroup
            Port: 443
            Protocol: "HTTPS"
            LoadBalancerArn: !Ref RGApplicationLoadBalancer
           
Outputs:        
  Applicationloadbalancer:
    Description: The created loadbalancer
    Value: !Ref RGApplicationLoadBalancer
  TargetGroup:
    Description: The created TargetGroup 
    Value: !Ref RGTargetGroup
  LoadBalancerSecurityGroup:
    Description: The securty group for the ALB
    Value: !Ref RGInstanceSecurityGroup
    
